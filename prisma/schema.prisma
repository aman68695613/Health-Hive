generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  name     String?
  password String?
  Review   Review[]
  bookings Booking[]
}

model Doctor {
  id         Int       @id @default(autoincrement())
  name       String
  speciality String
  fee        Float
  image      String?
  createdAt  DateTime  @default(now())
  Review     Review[]
  Surgery    Surgery[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  image       String
  price       Float
  description String
  rating      Float
  vendor      String
  createdAt   DateTime @default(now())
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  text      String?
  createdAt DateTime @default(now())
  doctorId  Int
  userId    Int
  Doctor    Doctor   @relation(fields: [doctorId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model Surgery {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  cost        Float
  createdAt   DateTime @default(now())
  doctorId    Int
  Doctor      Doctor   @relation(fields: [doctorId], references: [id])
}


model Ambulance {
  id          Int      @id @default(autoincrement())
  driverName  String
  price       Float
  available   Boolean @default(true)
  location    Location?
  bookings    Booking[]
}

model Booking {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  ambulance   Ambulance @relation(fields: [ambulanceId], references: [id])
  ambulanceId Int
  status      String    @default("booked") // Options: booked, completed, canceled
  createdAt   DateTime  @default(now())
}

model Location {
  id          Int       @id @default(autoincrement())
  ambulance   Ambulance @relation(fields: [ambulanceId], references: [id])
  ambulanceId Int @unique
  lat         Float
  lng         Float
  updatedAt   DateTime  @updatedAt
}